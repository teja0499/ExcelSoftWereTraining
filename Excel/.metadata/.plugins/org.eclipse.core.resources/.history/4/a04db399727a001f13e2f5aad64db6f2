package register;

import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import java.util.Random;

import javax.servlet.ServletContext;

import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.struts2.ServletActionContext;

public class Genrate_ExcelFile {

//	private String excelLink;
	private String fileName;
	private String name;
	private List<User> users;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getFileName() {
		return fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

//	public String getExcelLink() {
//		System.out.println(excelLink);
//		return excelLink;
//	}
//
//	public void setExcelLink(String excelLink) {
//		this.excelLink = excelLink;
//	}

	public String genrateExcel() throws ParseException {
		System.out.println("Genrate_ExcelFile start");
		System.out.println("name :- " + name);
		if (name.length() != 0) {
			SearchFunction dataByName = new SearchFunction();
			users = dataByName.searchByName(name);
		} else {
			Get allUser = new Get();
			users = allUser.getAll();
		}

		String Header[] = { "ID", " Name", "Email", "Mobile", "DOB", "Gender", "Qualification", "Password" };
		Workbook workbook = new HSSFWorkbook();

		CellStyle headerStyle = workbook.createCellStyle();
		Font font = workbook.createFont();
		font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
		headerStyle.setFont(font);

		headerStyle.setFillForegroundColor(HSSFColor.BRIGHT_GREEN.index);
		headerStyle.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);

		headerStyle.setBorderTop(CellStyle.BORDER_THICK);
		headerStyle.setBorderBottom(CellStyle.BORDER_THICK);
		headerStyle.setBorderLeft(CellStyle.BORDER_THICK);
		headerStyle.setBorderRight(CellStyle.BORDER_THICK);

		Sheet sheet = workbook.createSheet();
		Row row = sheet.createRow(0);
		sheet.createFreezePane(0, 1);
		
		
		 SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
	        CellStyle dateCellStyle = workbook.createCellStyle();
	        dateCellStyle.setDataFormat(workbook.createDataFormat().getFormat("MM/dd/yyyy"));

		

		for (int i = 0; i < Header.length; i++) {
			Cell cell = row.createCell(i);
			cell.setCellValue(Header[i]);
			cell.setCellStyle(headerStyle);
		}

		for (int i = 1; i <= users.size(); i++) {
			row = sheet.createRow(i);
			row.createCell(0).setCellValue(users.get(i - 1).getId());
			row.createCell(1).setCellValue(users.get(i - 1).getName());
			row.createCell(2).setCellValue(users.get(i - 1).getEmail());
			row.createCell(3).setCellValue(users.get(i - 1).getMobile());
			
			Cell dobCell=row.createCell(4);
			dobCell.setCellValue(users.get(i - 1).getDob());
			dobCell.setCellStyle(dateCellStyle);
			
			row.createCell(5).setCellValue(users.get(i - 1).getGender());
			row.createCell(6).setCellValue(users.get(i - 1).getQualification());

		}

		String path = ServletActionContext.getServletContext().getRealPath("/ExcelFiles/");
		String finalPath = path + fileName + ".xls";

		System.out.println("name :- " + name);
		System.out.println(finalPath);

		try (FileOutputStream fileOut = new FileOutputStream(finalPath)) {
			workbook.write(fileOut);
			System.out.println("Excel file has been created successfully.");
			System.out.println("Genrate_ExcelFile end");
			return "success";
		} catch (IOException e) {
			e.printStackTrace();
		}
		return "";

	}
}
